What happens when you initialize a repository? Why do you need to do it?


You create the .git directory and therefore create the directory for git to store all of the version tracking history.



How is the staging area different from the working directory and the repository?
What value do you think it offers?


The staging area is where you build the collection of files that will be added in a commit.
It allows for a logical separation of file additions per commit action.


How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?






QUESTION: How can you use the staging area to make sure you have one commit per logical change?

ANSWER:
After you have made changes to the files, you will only commit the file that you add to the staging area. So.... 1: Make the changes, 2. Add the changed file to the staghing area, 3. Commit the change.
Any other changed files will not be committed until you repeat this process.



QUESTION: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

ANSWER:
Branches are helpful if you want to test out a new function without interfereing with the main program files. This could also be useful perhaps when more than one developer is working on the code.



QUESTION: How do the diagrams help you visualize the branch structure?

They demonstrate the reachability and flow of branches, along with additional commits that would not show with a git log command. If you want to make a commit from a commit that is not the latest commit on the
 current branch, then you need to create a new branch name so that it will be reachable. Otherwise, unless you record the commit_id, the commit will be lost / unreachable.

git checkout - b [new_branch_name]

